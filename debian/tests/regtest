#!/bin/bash

set -x

if [[ -z ${ADTTMP-} ]]; then
    WORKDIR=$(mktemp -d)
    ARTIFACTS=${WORKDIR}
else
    WORKDIR=${ADTTMP}
    ARTIFACTS=${ADT_ARTIFACTS}
fi

cleanup() {
  if [[ -e "$WORKDIR/slapd.pid" ]]; then
     kill -TERM $(cat $WORKDIR/slapd.pid)
  fi
  if [[ -z ${ADTTMP-}  ]]; then
	rm -rf WORKDIR
  fi
}

trap cleanup 0 INT QUIT ABRT PIPE TERM

setup_slapd() {
    set -e
    mkdir -p $WORKDIR/ldap
    sed -e "s!@workdir@!$WORKDIR!" \
	< debian/tests/slapd.conf.tmpl > $ARTIFACTS/slapd.conf
    slapadd -d -1 -f $ARTIFACTS/slapd.conf -b dc=example,dc=com -l debian/tests/default.ldif
    slapd -h ldapi://${WORKDIR//\//%2F}%2Fldapi -f $ARTIFACTS/slapd.conf &
    slappid=$!
    attempts=0
    until ldapsearch -x -H ldapi://${WORKDIR//\//%2F}%2Fldapi -b "dc=example,dc=com" '(objectclass=*)'; do
	attempts=$(($attempts + 1))
	if [[ $attempts -gt 60 ]]; then
	  echo "failed to connect to slapd in 60 attempts"
	  exit 1
        fi
	sleep 0.01
    done
    set +e
}

# simulate a bootstrap and one update cycle
actions=("update --full" "status" "update")

run_nsscache() {
    source=$1
    cache=$2
    config_orig="debian/tests/nsscache.conf.tmpl"
    config=$(mktemp -p ${ARTIFACTS} nsscache.${source}.conf.XXXXXX)
    sed -e "s!@cache@!$cache!" \
	-e "s!@source@!$source!" \
	-e "s!@workdir@!$WORKDIR!" \
	< $config_orig > $config
    mkdir $WORKDIR/$cache
    mkdir $WORKDIR/ldap-timestamps

    for a in "${actions[@]}"; do
        output="$ARTIFACTS/${source}-${a// /_}.log"
        PYTHONPATH=.:$PYTHONPATH ./nsscache -d -c "${config}" ${a}
        r=$?
        if [[ $r -ne 0 ]]; then
            echo FAILED - output follows
            cat "$output"
            exit $r
        fi
    done
}

test_nssdb() {
	:
}

test_files() {
	ls -alR $WORKDIR/files
	set -e
	grep jaq $WORKDIR/files/passwd
}

setup_slapd
run_nsscache ldap nssdb
test_nssdb
run_nsscache ldap files
test_files
